name: Test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }} + ${{ matrix.variant }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allowed-to-fail }}
    env:
      SYMFONY_REQUIRE: ${{matrix.symfony-require}}

    strategy:
      matrix:
        php-version:
          - '8.2'
          - '8.3'
        dependencies: [highest]
        allowed-to-fail: [false]
        symfony-require: ['']
        variant: [normal]
        include:
          - php-version: '8.2'
            dependencies: highest
            allowed-to-fail: false
            symfony-require: 6.4.*
            variant: symfony/symfony:"6.4.*"
          - php-version: '8.2'
            dependencies: highest
            allowed-to-fail: false
            symfony-require: 7.1.*
            variant: symfony/symfony:"7.1.*"
          - php-version: '8.3'
            dependencies: highest
            allowed-to-fail: false
            symfony-require: 6.4.*
            variant: symfony/symfony:"6.4.*"
          - php-version: '8.3'
            dependencies: highest
            allowed-to-fail: false
            symfony-require: 7.1.*
            variant: symfony/symfony:"7.1.*"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          tools: composer:v2, flex
      - name: Add PHPUnit matcher
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Install variant
        if: matrix.variant != 'normal' && !startsWith(matrix.variant, 'symfony/symfony')
        run: composer require ${{ matrix.variant }} --no-update
      - name: Install Composer dependencies (${{ matrix.dependencies }})
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: ${{ matrix.dependencies }}
      - name: Run Tests with coverage
        run: vendor/bin/phpunit -c phpunit.xml.dist --coverage-clover build/logs/clover.xml
      #- name: Send coverage to Codecov
      #  uses: codecov/codecov-action@v4
      #  with:
      #    files: build/logs/clover.xml
